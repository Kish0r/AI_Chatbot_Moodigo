# Generated by Django 4.2.7 on 2025-08-13 06:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('resource_type', models.CharField(choices=[('crisis', 'Crisis Support'), ('counseling', 'Counseling Services'), ('app', 'Mobile App'), ('article', 'Article/Guide'), ('hotline', 'Hotline'), ('exercise', 'Mental Exercise')], max_length=20)),
                ('url', models.URLField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('is_crisis', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_anonymous', models.BooleanField(default=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_mood_tracking', models.BooleanField(default=True)),
                ('daily_check_ins', models.BooleanField(default=False)),
                ('crisis_mode', models.BooleanField(default=False)),
                ('preferred_name', models.CharField(blank=True, max_length=50)),
                ('university', models.CharField(blank=True, max_length=100)),
                ('year_of_study', models.CharField(blank=True, max_length=20)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chatbot.usersession')),
            ],
        ),
        migrations.CreateModel(
            name='MoodEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood', models.CharField(choices=[('very_happy', 'üòÑ Very Happy'), ('happy', 'üòä Happy'), ('neutral', 'üòê Neutral'), ('sad', 'üòû Sad'), ('very_sad', 'üò¢ Very Sad'), ('anxious', 'üò∞ Anxious'), ('stressed', 'üò§ Stressed'), ('angry', 'üò† Angry')], max_length=20)),
                ('intensity', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.usersession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('user', 'User'), ('bot', 'Bot')], max_length=10)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('predicted_condition', models.CharField(blank=True, max_length=50, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('risk_level', models.CharField(blank=True, max_length=20, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot.conversation')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MentalHealthAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.IntegerField()),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('moderate', 'Moderate Risk'), ('high', 'High Risk'), ('very_high', 'Very High Risk')], max_length=20)),
                ('responses', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recommendations', models.TextField(blank=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.usersession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.usersession'),
        ),
    ]
